services:
  wedding_app:
    build:
      context: ./docker
      dockerfile: Dockerfile.dev
    container_name: wedding_app
    volumes:
      - .:/var/www/html
    ports:
      - "9000:9000"
    depends_on:
      - wedding_redis
    environment:
      - APP_ENV=local
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
    networks:
      - wedding-network

  wedding-webserver:
    image: nginx:1.27-alpine
    container_name: wedding-webserver
    depends_on:
      - wedding_app
    ports:
      - "8182:80"
    volumes:
      - /home/madiyor/Wedding:/var/www/html
      - /home/madiyor/Wedding/docker/conf.d:/etc/nginx/conf.d
    networks:
      - wedding-network
  
  wedding-postgresql:
    image: postgres:17-alpine
    container_name: wedding-postgresql
    restart: always
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_DB=${DB_DATABASE}
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - wedding-data:/var/lib/postgresql/data
    networks:
      - wedding-network

  wedding_redis:
    image: redis:latest
    container_name: proselyte-redis
    ports:
      - "6379:6379"
    networks:
      - wedding-network

  wedding_redis_web:
    image: redis/redisinsight:latest
    container_name: proselyte-redisinsight
    restart: always
    depends_on:
      - wedding_redis
    ports:
      - "5540:5540"
    volumes:
      - wedding-redis-insight:/data
    networks:
      - wedding-network
 
volumes:
  wedding-data:
  wedding-redis-insight:

networks:
  wedding-network:
    driver: bridge